.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: rgb(233, 233, 233);
}

.main-wrapper{
  position: relative;  
}

.reelsContainer {
  height: calc(100vh - 3rem);
  width: 28vw;
  /* margin-top: 4em; */
  padding-bottom: 100px;
  display: flex;
  overflow: auto;
  gap: 2em;
  flex-direction: column;
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth; /* Smooth scroll behavior */
}

.reelsContainer::-webkit-scrollbar {
  display: none;
}

.reel {
  min-height: 75vh;
  min-width: 25vw;
  background-color: rgb(0, 0, 0);
  scroll-snap-align: start;
  border-radius: 10px;
  overflow: hidden;
}

.plyr--video {
  margin-top: auto;
  margin-bottom: auto;
  width: 100%;
  height: 100%;
}
@media only screen and (max-width: 600px) {
  .reelsContainer {
    width: 100%;
  }
  .reel {
    min-width: 100%;
  }
}

@media only screen and (max-width: 1226px)  and (min-width: 600px) {
  .reelsContainer {
    width: 50vw;
  }
  .reel {
    min-width: 30vw;
  }
}

.mouse-scroll{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 300px;
  height: 300px;
  /* background-color: black; */
  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
  border-radius: 15px;
  overflow: hidden;
  cursor: pointer;

}

.mouse-scroll img{
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
/* Animation styles */
.reel {
    min-height: 80vh;
    opacity: 1;
    transform: scale(0.97); /* Slightly shrink before entering view */
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
  
  .reel.visible {
    opacity: 1;
    transform: scale(1); /* Scale back to normal size */
  }
  
